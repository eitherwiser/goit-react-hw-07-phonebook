{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","App.js","index.js","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","addContact","createAction","name","contact","payload","id","uuid","number","deleteContact","changeFilter","def","safeContactsToLocal","newState","window","localStorage","setItem","JSON","stringify","items","createReducer","getItem","parse","state","filter","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contacts","connect","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleOnChange","e","target","type","value","onSubmit","some","alert","preventDefault","className","s","form","label","input","onChange","pattern","title","required","btn","allContacts","normalizeFilter","toLowerCase","includes","visibleContacts","length","list_title","list","map","list_item","href","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62f1544b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2pIN0\"};","import { v4 as uuid } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contact/addContact', (name, contact) => ({\r\n  payload: { id: uuid(), name: name, number: contact },\r\n}));\r\n\r\nconst deleteContact = createAction('contact/deleteContact');\r\n\r\nconst changeFilter = createAction('contacts/onChangeFilter');\r\n\r\nexport { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\n\r\n//init first state from localStorage\r\nconst def = [\r\n  { id: '3145q6', name: 'Bill Gatesevich', number: '044242424600' },\r\n  { id: '6531q4', name: 'Mark Zuckerman', number: '062746004242' },\r\n  { id: '3131q6', name: 'Linus Torvaldsiuk', number: '057242424600' },\r\n  { id: 'q53143', name: 'Jeff Bezenko', number: '064723004242' },\r\n];\r\n\r\nconst initialState = () => {\r\n  if (!window.localStorage.getItem('contacts')) {\r\n    window.localStorage.setItem('contacts', JSON.stringify(def));\r\n  }\r\n  return JSON.parse(window.localStorage.getItem('contacts'));\r\n};\r\n\r\n//write to localStorage\r\nconst safeContactsToLocal = newState =>\r\n  window.localStorage.setItem('contacts', JSON.stringify(newState));\r\n\r\n//\r\nconst items = createReducer(initialState(), {\r\n  [addContact]: (state, { payload }) => {\r\n    let newState = [...state, payload];\r\n    safeContactsToLocal(newState);\r\n    return newState;\r\n  },\r\n\r\n  [deleteContact]: (state, { payload }) => {\r\n    let newState = state.filter(({ id }) => id !== payload);\r\n    safeContactsToLocal(newState);\r\n    return newState;\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport contactsReducer from './contacts/contacts-reducers';\n//\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    middleware,\n  },\n});\n\nexport default store;\n","import { useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { addContact } from \"redux/contacts/contacts-actions.js\"\r\nimport s from \"./Form.module.css\";\r\n//\r\n\r\n\r\nconst ContactForm = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts.items);\r\n\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const handleOnChange = (e) => {\r\n    const { type, value } = e.target;\r\n    switch(type) {\r\n      case 'text':\r\n        setName(value);\r\n        break;\r\n      case 'tel':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in your phonebook.`)\r\n      return;\r\n    } else if (contacts.some(contact => contact.number === number)) {\r\n      alert(`Person with number ${number} is already in your phonebook.`)\r\n      return;\r\n    }\r\n    dispatch(addContact(name,number))\r\n    setName('');\r\n    setNumber('');\r\n    e.preventDefault();\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <form onSubmit={onSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            onChange={handleOnChange}\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          </label>\r\n  \r\n        <label className={s.label}>\r\n          Number &nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            onChange={handleOnChange}\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          </label>\r\n\r\n          <button className={s.btn} type=\"onSubmit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default connect()(ContactForm)\r\n\r\n","import { connect, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeFilter } from \"redux/contacts/contacts-actions.js\"\r\nimport s from \"./Filter.module.css\";\r\n//\r\n\r\n\r\nconst Filter = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const value = useSelector(state => state.contacts.filter);\r\n  \r\n  \r\n  return (\r\n      <label>Find contacts by name &nbsp;\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n        ></input>\r\n        </label>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default connect()(Filter);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { deleteContact } from \"redux/contacts/contacts-actions.js\"\r\nimport s from \"./ContactsList.module.css\";\r\n//\r\n\r\n\r\n    const visibleContacts = (allContacts, filter) => {\r\n      const normalizeFilter = filter.toLowerCase();\r\n      return allContacts.filter((contact) => (\r\n        contact.name.toLowerCase().includes(normalizeFilter)))\r\n    };\r\n//\r\n\r\n\r\nconst ContactsList = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => visibleContacts(state.contacts.items, state.contacts.filter));\r\n\r\n\r\n  return (\r\n    <>\r\n      {!contacts.length && <h4>Contacts list is empty.</h4>}\r\n      {!!contacts.length && \r\n      <> \r\n        <h4 className={s.list_title}>Contacts list:</h4>\r\n        <ul className={s.list}>\r\n          {contacts.map(({ id, name, number }) => (\r\n            <li\r\n              key={id}\r\n              className={s.list_item}\r\n            >\r\n\r\n              <a href={\"tel:\" + { number }}>\r\n                <span className={s.name}>{name}&nbsp;:</span>\r\n                <span className={s.number}>{number}</span>\r\n              </a>\r\n\r\n              <button\r\n                type=\"button\"\r\n                className={s.btn}\r\n                onClick={() => dispatch(deleteContact(id))}\r\n              >\r\n                <span className=\"material-icons\">delete</span>\r\n              </button>\r\n            </li>))}\r\n        </ul>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\n\r\nexport default connect()(ContactsList)\r\n\r\n","import React from 'react';\r\nimport ContactForm from './components/Form/Form.jsx';\r\nimport Filter from './components/Filter/Filter.jsx';\r\nimport ContactsList from './components/ContactsList/ContactsList.jsx';\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Filter />\r\n\r\n      <ContactForm />\r\n\r\n      <ContactsList />\r\n    </>\r\n  );\r\n}\r\n\r\n//const [filter, setFilter] = useState('');\r\n//const [localStorageState, setLocalStorageState] = useState(true);\r\n\r\n//const onFilterChange = e => setFilter(e.currentTarget.value);\r\n\r\n//const onLocalStorageChange = () => {\r\n//  setLocalStorageState(pre => !pre);\r\n//};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/store.js';\r\nimport App from './App.js';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3CV4R\",\"label\":\"Form_label__Q7O4L\",\"input\":\"Form_input__MB5Nf\",\"btn\":\"Form_btn__1c8H4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__23GZI\",\"list_title\":\"ContactsList_list_title__2HyiT\",\"list_item\":\"ContactsList_list_item__3FFc9\",\"name\":\"ContactsList_name__252os\",\"number\":\"ContactsList_number__170m4\",\"btn\":\"ContactsList_btn__17n8Y\"};"],"sourceRoot":""}