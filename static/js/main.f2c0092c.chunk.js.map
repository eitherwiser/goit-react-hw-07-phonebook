{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Form/Form.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","components/Form/Form.jsx","components/Loader/Loader.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","resp","data","addContact","contact","post","deleteContact","id","delete","changeFilter","createAction","items","createReducer","fulfilled","_","payload","state","filter","loading","pending","rejected","contactsReducer","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contacts","ContactForm","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","email","setEmail","handleOnChange","e","target","type","value","onSubmit","some","alert","preventDefault","className","s","form","label","input","onChange","pattern","title","required","onClick","reset_btn","submit__btn","btn","App","color","height","width","timeout","Component","Filter","ContactsList","allContacts","normalizeFilter","trim","toLowerCase","includes","visibleContacts","isLoading","useEffect","length","table_wrapper","table_wrapper__scroll","table","table_header","table_header__floating_cell","class","tbody","map","table_row","item","href","options","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2c0092c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_wrapper\":\"ContactsList_table_wrapper__331w0\",\"table_wrapper__scroll\":\"ContactsList_table_wrapper__scroll__-wclP\",\"table\":\"ContactsList_table__XsqVB\",\"table_header\":\"ContactsList_table_header__1zC7B\",\"table_header__floating_cell\":\"ContactsList_table_header__floating_cell__aafZl\",\"table_row\":\"ContactsList_table_row__1LXOi\",\"item\":\"ContactsList_item__3yHkR\",\"btn\":\"ContactsList_btn__17n8Y\",\"name\":\"ContactsList_name__252os\",\"number\":\"ContactsList_number__170m4\",\"email\":\"ContactsList_email__19A_r\",\"contact\":\"ContactsList_contact__1q9x7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1El4g\",\"input\":\"Filter_input__2pIN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3CV4R\",\"label\":\"Form_label__Q7O4L\",\"input\":\"Form_input__MB5Nf\",\"btn\":\"Form_btn__1c8H4\",\"reset_btn\":\"Form_reset_btn__1bqs-\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://61a7e524387ab200171d2f4b.mockapi.io/testAPI';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const resp = await axios.get('/contacts');\n    return resp.data;\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async contact => {\n    const resp = await axios.post('/contacts', contact);\n    return resp.data;\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async id => {\n    await axios.delete(`/contacts/${id}`);\n    return id;\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst changeFilter = createAction('contacts/onChangeFilter');\n\nexport { changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\nimport { changeFilter } from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\nconst contactsReducer = combineReducers({\n  items,\n  filter,\n  loading,\n});\n\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport contactsReducer from './contacts/contacts-reducers';\n//\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    middleware,\n  },\n});\n\nexport default store;\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { addContact } from \"../../redux/contacts/contacts-operations\"\r\nimport s from \"./Form.module.css\";\r\n//\r\n\r\n\r\nconst ContactForm = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts.items);\r\n\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const handleOnChange = (e) => {\r\n    const { type, value } = e.target;\r\n    switch(type) {\r\n      case 'text':\r\n        setName(value);\r\n        break;\r\n      \r\n      case 'tel':\r\n        setNumber(value);\r\n        break;\r\n      \r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`\"${name}\" is already in your phonebook.`)\r\n      return;\r\n    } else if (contacts.some(contact => contact.number === number)) {\r\n      alert(`Person with number \"${number}\" is already in your phonebook.`)\r\n      return;\r\n    }\r\n      else if (contacts.some(contact => contact.email === email)) {\r\n      alert(`Person with E-mail \"${email}\" is already in your phonebook.`)\r\n      return;\r\n    }\r\n    dispatch(addContact({ name, number, email }))\r\n    setName('');\r\n    setNumber('');\r\n    setEmail('');\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <form onSubmit={onSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"name\"\r\n            onChange={handleOnChange}\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <button onClick={() => setName('')} className={`${s.reset_btn}`} type=\"button\">\r\n            X\r\n          </button>\r\n          </label>\r\n\r\n                <label className={s.label}>\r\n          E-mail &nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"email\"\r\n            onChange={handleOnChange}\r\n            name=\"email\"\r\n            value={email}\r\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\r\n            title=\"Example: bob.pupkin@somemail.com\"\r\n            required\r\n          />\r\n          <button onClick={() => setEmail('')} className={`${s.reset_btn}`} type=\"button\">\r\n            X\r\n          </button>\r\n          </label>\r\n  \r\n        <label className={s.label}>\r\n          Number &nbsp;\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            onChange={handleOnChange}\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button onClick={() => setNumber('')} className={`${s.reset_btn}`} type=\"button\">\r\n            X\r\n          </button>\r\n        </label>\r\n\r\n        <button className={`${s.submit__btn} ${ s.btn}`} type=\"onSubmit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\n","import { Component } from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default class App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#f0f0f0\"\r\n        height={50}\r\n        width={150}\r\n        timeout={20000}\r\n      />\r\n    );\r\n  }\r\n}","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions.js\"\r\nimport s from \"./Filter.module.css\";\r\n//\r\n\r\n\r\nconst Filter = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const value = useSelector(state => state.contacts.filter);\r\n  \r\n  \r\n  return (\r\n      <label className={s.label}>Search contact &nbsp;\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n        ></input>\r\n        </label>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default (Filter);","import {useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from '../../components/Loader/Loader.jsx'\r\n\r\nimport Filter from '../../components/Filter/Filter.jsx';\r\nimport { fetchContacts, deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport s from \"./ContactsList.module.css\";\r\n//\r\n\r\n\r\n    const visibleContacts = (allContacts, filter) => {\r\n      const normalizeFilter = filter.trim().toLowerCase();\r\n      return allContacts.filter((contact) => (\r\n        contact.name.toLowerCase().includes(normalizeFilter)))\r\n    };\r\n//\r\n\r\n\r\nconst ContactsList = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => visibleContacts(state.contacts.items, state.contacts.filter));\r\n  const isLoading = useSelector(state => state.contacts.loading)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Filter />\r\n      {!contacts.length && <h4>Contacts list is empty.</h4>}\r\n      {isLoading && <Loader/>}\r\n      {!!contacts.length && \r\n        <div className={s.table_wrapper}>\r\n        <div className={s.table_wrapper__scroll}>\r\n        <table className={s.table}>\r\n          <caption></caption>\r\n          <thead className={s.table_header}>\r\n          <tr>\r\n            <th><div className={s.table_header__floating_cell} label=\"Name\"></div></th>\r\n            <th><div className={s.table_header__floating_cell} label=\"Phone number\"></div></th>\r\n            <th><div className={s.table_header__floating_cell} label=\"E-mail\"></div></th>\r\n            <th><div className={s.table_header__floating_cell} label=\"Options\"></div></th>\r\n            <th class=\"scrollbarhead\"/>\r\n          </tr>\r\n          </thead>\r\n          <tbody className={s.tbody}>\r\n          {contacts.map(({ name, number, email, id }) => (\r\n            <tr key={id} className={s.table_row}>\r\n            <td className={`${s.item} + ${ s.name}`}>{name}&nbsp;</td>\r\n            <td className={`${s.item} + ${ s.number}`}><a href={\"tel:\" + { number }} className={s.contact}>{number}</a></td>\r\n            <td className={`${s.item} + ${ s.email}`}><a href={\"mailto:\" + { email }} className={s.contact}>{email}</a></td>\r\n            <td className={`${s.item} + ${ s.options}`}>\r\n              <button\r\n                type=\"button\"\r\n                className={s.btn}\r\n                onClick={() => dispatch(deleteContact(id))}\r\n              >\r\n                <span className=\"material-icons\">delete</span>\r\n              </button>\r\n              </td>\r\n            </tr>))}\r\n          </tbody>\r\n          </table>\r\n          </div>\r\n          </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n\r\n","import React from 'react';\n\nimport ContactForm from './components/Form/Form.jsx';\nimport ContactsList from './components/ContactsList/ContactsList.jsx';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <ContactsList />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store.js';\nimport App from './App.js';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}